"""
# Definition for a Node.
class Node:
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

class Solution:
    def flatten(self, head: 'Node') -> 'Node':
        
        if not head: return head

        new_head = head
        
        new_head.val = head.val
        new_head.prev = head.prev
        new_head.next = head.next
        new_head.child = None
        
        self.dfs(head, new_head)
        
        return new_head
    
    def dfs(self, head, new_head):
        
        new_head.child = None
        
        
        _val = head.next
        
        if head.child:
            
            new_head.next = head.child
            new_head.next.prev = head
            new_head = self.dfs(head.next, new_head.next)
        
        if _val:
            
            new_head.next = _val
            new_head.next.prev = new_head
            new_head = self.dfs(head.next, new_head.next)
            
        return new_head
